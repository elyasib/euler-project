/*Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.*/

object problem2 {
  def main(args: Array[String]) {
    println("accum: " + fibb(4000000,0L,1L,0L).toString) 
  }
  def fibb(num: Int, fib_0: Long, fib_1: Long, sum: Long): Long = fib_1 match {
    case x: Long if x < num  => {
      var fib_2 = fib_0 + x
      fibb(num, x, fib_2, if (fib_2 % 2 == 0) sum+fib_2 else sum)
    }
    case _ => sum
  }
}

